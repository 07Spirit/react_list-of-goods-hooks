{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","NONE","reverse","App","useState","sortTypeEdit","isReversedEdit","isReset","handleSortEvent","type","className","classNames","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAoBzB,OAlBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,KAAKb,EAASc,KACd,QACE,OAAO,MAITT,GACFC,EAAaS,UAGRT,G,SAnCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAMgB,EAAgB,WAC3B,MAAiCC,mBAASjB,EAASc,MAAnD,mBAAOV,EAAP,KAAiBc,EAAjB,KACA,EAAqCD,oBAAS,GAA9C,mBAAOZ,EAAP,KAAmBc,EAAnB,KACMC,EAAUhB,IAAaJ,EAASc,MAAQT,EAMxCgB,EAAkB,SAACC,GACvB,OAAQA,GACN,KAAKtB,EAASc,KACZI,EAAalB,EAASc,MACtBK,GAAe,GACf,MAEF,KAAKnB,EAASU,SACd,KAAKV,EAASY,OACZM,EAAaI,KAQnB,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACED,KAAK,SACLC,UAAWC,IAAW,SAAU,UAAW,CACzC,WAAYpB,IAAaJ,EAASU,WAEpCe,QAAS,kBAAMJ,EAAgBrB,EAASU,WAL1C,iCAUA,wBACEY,KAAK,SACLC,UAAWC,IAAW,SAAU,aAAc,CAC5C,WAAYpB,IAAaJ,EAASY,SAEpCa,QAAS,kBAAMJ,EAAgBrB,EAASY,SAL1C,4BAUA,wBACEU,KAAK,SACLC,UAAWC,IAAW,SAAU,aAAc,CAC5C,YAAanB,IAEfoB,QAjDmB,WACzBN,GAAe,SAACO,GAAD,OAAWA,MA2CtB,qBAUCN,GACC,wBACEE,KAAK,SACLC,UAAU,4BACVE,QAAS,kBAAMJ,EAAgBrB,EAASc,OAH1C,sBAUJ,6BACGZ,EACCD,EACA,CAAEG,WAAUC,eAEXsB,KAAI,SAACC,GAAD,OACH,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCjIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8e4aad0c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, sortTypeEdit] = useState(SortType.NONE);\n  const [isReversed, isReversedEdit] = useState(false);\n  const isReset = sortType !== SortType.NONE || isReversed;\n\n  const handleReverseEvent = () => {\n    isReversedEdit((prev) => !prev);\n  };\n\n  const handleSortEvent = (type: SortType) => {\n    switch (type) {\n      case SortType.NONE:\n        sortTypeEdit(SortType.NONE);\n        isReversedEdit(false);\n        break;\n\n      case SortType.ALPHABET:\n      case SortType.LENGTH:\n        sortTypeEdit(type);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-info', {\n            'is-light': sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => handleSortEvent(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-success', {\n            'is-light': sortType !== SortType.LENGTH,\n          })}\n          onClick={() => handleSortEvent(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverseEvent}\n        >\n          Reverse\n        </button>\n\n        {isReset && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => handleSortEvent(SortType.NONE)}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(\n          goodsFromServer,\n          { sortType, isReversed },\n        )\n          .map((good) => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}